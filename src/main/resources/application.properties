#configuration serveur apache 
# server.port=8181
# ===============================
# = DATA SOURCE
# ===============================
# Configuration de la base de donnees
 #lien de la bdd
 spring.datasource.url=jdbc:mariadb://localhost:3306/pos_auth?createDatabaseIfNotExist=true
 #utilisateur de la bdd
 spring.datasource.username=root
 #mot de passe
 spring.datasource.password=utP@j<b.
 #pilote de connexion 
 spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# paramaitre qui active me test de connexion de bdd 
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
 # activer le traçage de requete
 spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
 # la base de données se mettra a jour celon les entité
 spring.jpa.hibernate.ddl-auto=update
 # strategie de nomage pour bien nomé les champ de la bdd cela aide spring data a ne pas faire d erreur
 spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
 spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
 # specifier le genre d sql que le moteur de spring data va utiliser pour ecrire ses requete sql traduite depuis nos requete jpql/hql
 spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
 #pour que thymleaf recharge automatiquement les pages
 spring.thymeleaf.cache = false
#s champ de l
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false


# ssl configuration 
# Define a custom port instead of the default 8080
server.port=8443

#logging setup
#trace= true
spring.output.ansi.enabled= ALWAYS
logging.file = c:/server/main.log
logging.file.max-size = 500000000
logging.pattern.file=%-30(%d{HH:mm:ss.SSS} [%thread]) %-5level %logger{32} - %msg%n

# Tell Spring Security (if used) to require requests over HTTPS

# The format used for the keystore 
server.ssl.key-store-type=JKS
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore.jks
# The password used to generate the certificate
server.ssl.key-store-password=notfound
# The alias mapped to the certificate
server.ssl.key-alias=localhost

logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter= DEBUG